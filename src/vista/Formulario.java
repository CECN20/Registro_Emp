/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package vista;

import conexionSql.EmpleadoDAO;
import empleado.Empleado;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.text.ParseException;
import validador.Validador;

/**
 *
 * @author mariopatriciogonzalezgallegos
 */
public class Formulario extends javax.swing.JFrame {

    /**
     * Creates new form Formulario
     */
    EmpleadoDAO empleadoDAO = new EmpleadoDAO();

    DefaultTableModel model;

    public Formulario() {

        initComponents();
        List<Empleado> empleados = new ArrayList<>();

        try {
            empleados = empleadoDAO.listar();
            //LLENAR TABLA
            tblEmpleado.setModel(new DefaultTableModel(
                    new String[]{"RUT",
                        "NOMBRES",
                        "APELLIDO PATERNO",
                        "APELLIDO MATERNO",
                        "TIPO EMPLEADO",
                        "TELEFONO CONTACTO",
                        "CONTRATO"}, empleados.size()
            ));
            for (int i = 0; i < empleados.size(); i++) {

                tblEmpleado.setValueAt(empleados.get(i).getRut(), i, 0);
                tblEmpleado.setValueAt(empleados.get(i).getNombres(), i, 1);
                tblEmpleado.setValueAt(empleados.get(i).getApellidoPaterno(), i, 2);
                tblEmpleado.setValueAt(empleados.get(i).getApellidoMaterno(), i, 3);
                tblEmpleado.setValueAt(empleados.get(i).getTipoEmpleado(), i, 4);
                tblEmpleado.setValueAt(empleados.get(i).getTelefono(), i, 5);
                tblEmpleado.setValueAt(empleados.get(i).getEsIndefinido(), i, 6);
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Ohh! algo pasÃ³, vuelve a intentarlo");
        }

        CmbBoxTipoEmpleado.addItem("1 - Jefe TI");
        CmbBoxTipoEmpleado.addItem("2 - Programador");
        CmbBoxTipoEmpleado.addItem("3 - Cajera");
        CmbBoxTipoEmpleado.addItem("4 - Supervisor");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblEmpleado = new javax.swing.JTable();
        lblRun = new javax.swing.JLabel();
        txtRun = new javax.swing.JTextField();
        lblNombres = new javax.swing.JLabel();
        txtNombres = new javax.swing.JTextField();
        lblApellidoP = new javax.swing.JLabel();
        txtApellidoP = new javax.swing.JTextField();
        lblApellidoM = new javax.swing.JLabel();
        txtApellidoM = new javax.swing.JTextField();
        lblTipoEmpleado = new javax.swing.JLabel();
        CmbBoxTipoEmpleado = new javax.swing.JComboBox<>();
        lblTelefono = new javax.swing.JLabel();
        txtTelefono = new javax.swing.JTextField();
        CheckBoxContrato = new javax.swing.JCheckBox();
        lblContrato = new javax.swing.JLabel();
        btnGuardar = new javax.swing.JButton();
        btnBorrar = new javax.swing.JButton();
        btnLimpiar = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Mantenedor Empleados");

        tblEmpleado.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "rut", "nombre", "apellido paterno", "apellido materno", "tipo empleado", "telefono contacto", "contrato indefinido"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tblEmpleado.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblEmpleadoMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblEmpleado);

        lblRun.setText("Run");

        lblNombres.setText("Nombres");

        lblApellidoP.setText("Apellido Paterno");

        lblApellidoM.setText("Apellido Materno");

        lblTipoEmpleado.setText("Tipo de Empleado");

        lblTelefono.setText("Telefono de contacto");

        lblContrato.setText("Contrato Indefinido");

        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        btnBorrar.setText("Borrar");
        btnBorrar.setEnabled(false);
        btnBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBorrarActionPerformed(evt);
            }
        });

        btnLimpiar.setText("Limpiar");
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });

        btnEditar.setEnabled(false);
        btnEditar.setLabel("Actualizar");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 943, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(66, 66, 66)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblRun, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblNombres)
                                    .addComponent(lblApellidoP)
                                    .addComponent(lblApellidoM)
                                    .addComponent(lblTipoEmpleado)
                                    .addComponent(lblTelefono))
                                .addGap(77, 77, 77)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtRun)
                                    .addComponent(txtNombres)
                                    .addComponent(txtApellidoP)
                                    .addComponent(txtApellidoM)
                                    .addComponent(txtTelefono)
                                    .addComponent(CmbBoxTipoEmpleado, 0, 225, Short.MAX_VALUE))
                                .addGap(60, 60, 60)
                                .addComponent(btnLimpiar))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(CheckBoxContrato)
                                .addGap(53, 53, 53)
                                .addComponent(lblContrato)
                                .addGap(116, 116, 116)
                                .addComponent(btnGuardar)
                                .addGap(41, 41, 41)
                                .addComponent(btnBorrar)
                                .addGap(46, 46, 46)
                                .addComponent(btnEditar)))
                        .addGap(105, 105, 105)))
                .addContainerGap(702, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblRun)
                    .addComponent(txtRun, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnLimpiar))
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNombres)
                    .addComponent(txtNombres, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblApellidoP)
                    .addComponent(txtApellidoP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblApellidoM)
                    .addComponent(txtApellidoM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTipoEmpleado)
                    .addComponent(CmbBoxTipoEmpleado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTelefono)
                    .addComponent(txtTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(CheckBoxContrato)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblContrato)
                        .addComponent(btnGuardar)
                        .addComponent(btnBorrar)
                        .addComponent(btnEditar)))
                .addGap(18, 69, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed

        if(!validarDatos()) return;

        try {

            Empleado tempEmpleado = new Empleado(
                    txtRun.getText(),
                    txtNombres.getText(),
                    txtApellidoP.getText(),
                    txtApellidoM.getText(),
                    CmbBoxTipoEmpleado.getSelectedItem().toString(),
                    Integer.parseInt(txtTelefono.getText()),
                    CheckBoxContrato.isSelected()
            );
            tempEmpleado.imprimir();

            boolean resultadoGuardado = empleadoDAO.insertar(tempEmpleado);

            if (resultadoGuardado) {

                Object[] row = {
                    txtRun.getText(),
                    txtNombres.getText(),
                    txtApellidoP.getText(),
                    txtApellidoM.getText(),
                    CmbBoxTipoEmpleado.getSelectedItem().toString(),
                    Integer.parseInt(txtTelefono.getText()),
                    CheckBoxContrato.isSelected()
                };
                this.model = (DefaultTableModel) tblEmpleado.getModel();
                this.model.addRow(row);

                limpiar();
                JOptionPane.showMessageDialog(rootPane, "Usuario creado!");
            } else {
                JOptionPane.showMessageDialog(null, "No se pudo guardar el empleado.");
            }

        } catch (Exception e) {
            System.out.println("error " + e);
        }


    }//GEN-LAST:event_btnGuardarActionPerformed

    private void tblEmpleadoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblEmpleadoMouseClicked
        // TODO add your handling code here:
        int selectedRowIndex = tblEmpleado.getSelectedRow();

        btnEditar.setEnabled(true);
        btnGuardar.setEnabled(false);
        btnBorrar.setEnabled(true);
        txtRun.setText(tblEmpleado.getValueAt(selectedRowIndex, 0).toString());
        txtRun.setEnabled(false);
        txtNombres.setText(tblEmpleado.getValueAt(selectedRowIndex, 1).toString());
        txtApellidoP.setText(tblEmpleado.getValueAt(selectedRowIndex, 2).toString());
        txtApellidoM.setText(tblEmpleado.getValueAt(selectedRowIndex, 3).toString());
        CmbBoxTipoEmpleado.setSelectedItem(tblEmpleado.getValueAt(selectedRowIndex, 4).toString());
        txtTelefono.setText(tblEmpleado.getValueAt(selectedRowIndex, 5).toString());
        CheckBoxContrato.setSelected(Boolean.parseBoolean(tblEmpleado.getValueAt(selectedRowIndex, 6).toString()));

    }//GEN-LAST:event_tblEmpleadoMouseClicked

    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
        // TODO add your handling code here:        
        limpiar();
    }//GEN-LAST:event_btnLimpiarActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        // TODO add your handling code here:      
        if(!validarDatos()) return;
        
        int selectedRow = this.tblEmpleado.getSelectedRow();

        if (selectedRow != -1) {
            Empleado empleadoUpdate = new Empleado();
            empleadoUpdate.setRut(txtRun.getText());
            empleadoUpdate.setNombres(txtNombres.getText());
            empleadoUpdate.setApellidoPaterno(txtApellidoP.getText());
            empleadoUpdate.setApellidoMaterno(txtApellidoM.getText());
            empleadoUpdate.setTipoEmpleado(CmbBoxTipoEmpleado.getSelectedItem().toString());
            empleadoUpdate.setTelefono(Integer.parseInt(txtTelefono.getText()));
            empleadoUpdate.setEsIndefinido(CheckBoxContrato.isSelected());

            if (empleadoDAO.actualizar(empleadoUpdate)) {
                JOptionPane.showMessageDialog(rootPane, "Usuario actualizado!");

                tblEmpleado.setValueAt(empleadoUpdate.getRut(), selectedRow, 0);
                tblEmpleado.setValueAt(empleadoUpdate.getNombres(), selectedRow, 1);
                tblEmpleado.setValueAt(empleadoUpdate.getApellidoPaterno(), selectedRow, 2);
                tblEmpleado.setValueAt(empleadoUpdate.getApellidoMaterno(), selectedRow, 3);
                tblEmpleado.setValueAt(empleadoUpdate.getTipoEmpleado(), selectedRow, 4);
                tblEmpleado.setValueAt(empleadoUpdate.getTelefono(), selectedRow, 5);
                tblEmpleado.setValueAt(empleadoUpdate.getEsIndefinido(), selectedRow, 6);

                limpiar();

            } else {
                JOptionPane.showMessageDialog(rootPane, "Usuario no se pudo actualizar");
            }
        }
    }//GEN-LAST:event_btnEditarActionPerformed

    private void btnBorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBorrarActionPerformed

        int selectedRow = tblEmpleado.getSelectedRow();
        //Guardar informaciÃ³n del formulario en objeto Empleado
        String rut = txtRun.getText();
        //Data Access Object        
        boolean resultado = empleadoDAO.borrar(rut);

        if (resultado) {

            JOptionPane.showMessageDialog(rootPane, "Usuario eliminado");
            limpiar();
            ((DefaultTableModel) tblEmpleado.getModel()).removeRow(selectedRow);
        } else {
            JOptionPane.showMessageDialog(rootPane, "Usuario no se elimino");
        }
        limpiar();
    }//GEN-LAST:event_btnBorrarActionPerformed

    public void limpiar() {

        btnGuardar.setEnabled(true);
        btnEditar.setEnabled(false);
        btnBorrar.setEnabled(false);
        
        txtRun.setText("");
        txtRun.setEnabled(true);
        txtNombres.setText("");
        txtApellidoP.setText("");
        txtApellidoM.setText("");
        CmbBoxTipoEmpleado.setSelectedItem("1 - Jefe TI");
        txtTelefono.setText("");
        CheckBoxContrato.setSelected(false);
    }
    
    public boolean validarDatos() {
        //VALIDARUT
        Boolean rutValido = validador.Validador.validarRut(txtRun.getText());
        if (!rutValido) {
            JOptionPane.showMessageDialog(null, "El rut no es vÃ¡lido.");
            return false;
        }

        //Agregar validaciones
        //Validar Nombres y apellidos                
        if (txtNombres.getText().equals("") || txtApellidoP.getText().equals("") || txtApellidoM.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "El nombre y apellidos no pueden ser vacÃ­os.");
            return false;
        }
        
        if (txtNombres.getText().length() > 60 || txtApellidoP.getText().length() > 60 || txtApellidoM.getText().length() > 60) {
            JOptionPane.showMessageDialog(null, "El nombre y apellidos no pueden exceder los 60 caracteres.");
            return false;
        }

        if (txtTelefono.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "El telefÃ³no es obligatorio.");
            return false;
        }
        
        try {
            Validador.validarTamanioTexto(txtTelefono.getText(), 1, 9, "TelÃ©fono");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
            return false;
        }
        
        return true;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Formulario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Formulario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Formulario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Formulario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Formulario().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox CheckBoxContrato;
    private javax.swing.JComboBox<String> CmbBoxTipoEmpleado;
    private javax.swing.JButton btnBorrar;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblApellidoM;
    private javax.swing.JLabel lblApellidoP;
    private javax.swing.JLabel lblContrato;
    private javax.swing.JLabel lblNombres;
    private javax.swing.JLabel lblRun;
    private javax.swing.JLabel lblTelefono;
    private javax.swing.JLabel lblTipoEmpleado;
    private javax.swing.JTable tblEmpleado;
    private javax.swing.JTextField txtApellidoM;
    private javax.swing.JTextField txtApellidoP;
    private javax.swing.JTextField txtNombres;
    private javax.swing.JTextField txtRun;
    private javax.swing.JTextField txtTelefono;
    // End of variables declaration//GEN-END:variables
}
